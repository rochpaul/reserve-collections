package unidue.rc.model.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import unidue.rc.model.Action;
import unidue.rc.model.Membership;
import unidue.rc.model.PermissionDefinition;

/**
 * Class _Role was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Role extends CayenneDataObject {

    public static final String IS_DEFAULT_PROPERTY = "isDefault";
    public static final String NAME_PROPERTY = "name";
    public static final String ACTIONS_PROPERTY = "actions";
    public static final String PERMISSION_DEFINITIONS_PROPERTY = "permissionDefinitions";
    public static final String USER_ROLE_PROPERTY = "userRole";

    public static final String ID_PK_COLUMN = "id";

    public void setIsDefault(Boolean isDefault) {
        writeProperty(IS_DEFAULT_PROPERTY, isDefault);
    }
    public Boolean getIsDefault() {
        return (Boolean)readProperty(IS_DEFAULT_PROPERTY);
    }

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void addToActions(Action obj) {
        addToManyTarget(ACTIONS_PROPERTY, obj, true);
    }
    public void removeFromActions(Action obj) {
        removeToManyTarget(ACTIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Action> getActions() {
        return (List<Action>)readProperty(ACTIONS_PROPERTY);
    }


    public void addToPermissionDefinitions(PermissionDefinition obj) {
        addToManyTarget(PERMISSION_DEFINITIONS_PROPERTY, obj, true);
    }
    public void removeFromPermissionDefinitions(PermissionDefinition obj) {
        removeToManyTarget(PERMISSION_DEFINITIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PermissionDefinition> getPermissionDefinitions() {
        return (List<PermissionDefinition>)readProperty(PERMISSION_DEFINITIONS_PROPERTY);
    }


    public void addToUserRole(Membership obj) {
        addToManyTarget(USER_ROLE_PROPERTY, obj, true);
    }
    public void removeFromUserRole(Membership obj) {
        removeToManyTarget(USER_ROLE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Membership> getUserRole() {
        return (List<Membership>)readProperty(USER_ROLE_PROPERTY);
    }


}
