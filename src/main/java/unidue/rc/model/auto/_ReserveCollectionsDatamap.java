package unidue.rc.model.auto;

import java.util.List;

import org.apache.cayenne.ObjectContext;
import org.apache.cayenne.query.NamedQuery;

import unidue.rc.model.Book;
import unidue.rc.model.BookJob;
import unidue.rc.model.Permission;
import unidue.rc.model.ScanJob;

/**
 * This class was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public class _ReserveCollectionsDatamap {

    public static final String CHECK_IF_DAILY_STAT_ALREADY_EXISTS_QUERYNAME = "check_if_daily_stat_already_exists";

    public static final String COUNT_BOOKS_QUERYNAME = "count_books";

    public static final String COUNT_CHAPTERS_QUERYNAME = "count_chapters";

    public static final String COUNT_ENTRIES_QUERYNAME = "count_entries";

    public static final String COUNT_FILEENTRIES_QUERYNAME = "count_fileentries";

    public static final String COUNT_HEADLINES_QUERYNAME = "count_headlines";

    public static final String COUNT_HTML_QUERYNAME = "count_html";

    public static final String COUNT_JOURNALS_QUERYNAME = "count_journals";

    public static final String COUNT_RESERVECOLLECTIONS_FOR_STATUS_QUERYNAME = "count_reservecollections_for_status";

    public static final String COUNT_TOTALFILES_QUERYNAME = "count_totalfiles";

    public static final String COUNT_WEBLINKS_QUERYNAME = "count_weblinks";

    public static final String DELETE_PERMISSIONS_BY_INSTANCEID_QUERYNAME = "delete_permissions_by_instanceid";

    public static final String DELETE_PERMISSIONS_BY_ROLE_QUERYNAME = "delete_permissions_by_role";

    public static final String END_PARTICIPATIONS_QUERYNAME = "end_participations";

    public static final String END_PARTICIPATIONS_BY_ROLE_QUERYNAME = "end_participations_by_role";

    public static final String SELECT_ACCESS_LOG_COUNT_QUERYNAME = "select_access_log_count";

    public static final String SELECT_BOOK_JOBS_BY_COLLECTION_QUERYNAME = "select_book_jobs_by_collection";

    public static final String SELECT_BOOK_JOBS_BY_LOCATION_QUERYNAME = "select_book_jobs_by_location";

    public static final String SELECT_BOOKS_BY_COLLECTION_QUERYNAME = "select_books_by_collection";

    public static final String SELECT_COLLECTIONS_BY_PERMISSION_QUERYNAME = "select_collections_by_permission";

    public static final String SELECT_COLLECTIONS_BY_ROLE_QUERYNAME = "select_collections_by_role";

    public static final String SELECT_COLLECTIONS_BY_USER_QUERYNAME = "select_collections_by_user";

    public static final String SELECT_FREE_NUMBERS_BY_LOCATION_ORDERED_BY_NUMBER_ASC_QUERYNAME = "select_free_numbers_by_location_ordered_by_number_asc";

    public static final String SELECT_GLOBAL_ROLES_BY_USER_QUERYNAME = "select_global_roles_by_user";

    public static final String SELECT_LARGER_THAN_MAX_NUMBERS_BY_LOCATION_QUERYNAME = "select_larger_than_max_numbers_by_location";

    public static final String SELECT_PERMISSION_BY_USER_ACTION_QUERYNAME = "select_permission_by_user_action";

    public static final String SELECT_RESOURCES_BY_COLLECTION_QUERYNAME = "select_resources_by_collection";

    public static final String SELECT_SCAN_JOBS_BY_COLLECTION_QUERYNAME = "select_scan_jobs_by_collection";

    public static final String SELECT_SCAN_JOBS_BY_LOCATION_QUERYNAME = "select_scan_jobs_by_location";

    public static final String SELECT_STATISTICS_FOR_RANGE_QUERYNAME = "select_statistics_for_range";

    public static final String SELECT_UNRELATED_ACTIONS_OF_ROLE_QUERYNAME = "select_unrelated_actions_of_role";

    public static final String SELECT_WHOLE_STATISTICS_QUERYNAME = "select_whole_statistics";

    public List<BookJob> performSelectBookJobsByCollection(ObjectContext context , Integer collectionID) {
        String[] parameters = {
            "collectionID",
        };

        Object[] values = {
            collectionID,
        };

        return context.performQuery(new NamedQuery("select_book_jobs_by_collection", parameters, values));
    }

    public List<BookJob> performSelectBookJobsByLocation(ObjectContext context , Integer locationID) {
        String[] parameters = {
            "locationID",
        };

        Object[] values = {
            locationID,
        };

        return context.performQuery(new NamedQuery("select_book_jobs_by_location", parameters, values));
    }

    public List<Book> performSelectBooksByCollection(ObjectContext context , Integer collectionID) {
        String[] parameters = {
            "collectionID",
        };

        Object[] values = {
            collectionID,
        };

        return context.performQuery(new NamedQuery("select_books_by_collection", parameters, values));
    }

    public List<Permission> performSelectPermissionByUserAction(ObjectContext context , Integer userID, String resource, String name) {
        String[] parameters = {
            "userID",
            "resource",
            "name",
        };

        Object[] values = {
            userID,
            resource,
            name,
        };

        return context.performQuery(new NamedQuery("select_permission_by_user_action", parameters, values));
    }

    public List<ScanJob> performSelectScanJobsByCollection(ObjectContext context , Integer collectionID) {
        String[] parameters = {
            "collectionID",
        };

        Object[] values = {
            collectionID,
        };

        return context.performQuery(new NamedQuery("select_scan_jobs_by_collection", parameters, values));
    }

    public List<ScanJob> performSelectScanJobsByLocation(ObjectContext context , Integer locationID) {
        String[] parameters = {
            "locationID",
        };

        Object[] values = {
            locationID,
        };

        return context.performQuery(new NamedQuery("select_scan_jobs_by_location", parameters, values));
    }
}